## Poetry configuration migrated from setuptools + requirements.txt

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "project-a-backend"
version = "0.3.0"
description = "Single-user deterministic backtesting & validation engine"
authors = ["Project A <devnull@example.com>"]
readme = "README.md"
packages = [
  { include = "api", from = "alphaforge-brain/src" },
  { include = "domain", from = "alphaforge-brain/src" },
  { include = "infra", from = "alphaforge-brain/src" },
  { include = "services", from = "alphaforge-brain/src" },
  { include = "models", from = "alphaforge-brain/src" },
  { include = "lib", from = "alphaforge-brain/src" },
]

[tool.poetry.dependencies]
python = "3.11.*"  # Tightened for deterministic runtime (avoid 3.12 drift)
fastapi = "0.115.0"           # Web framework (includes compatible Starlette)
uvicorn = {version = "0.30.6", extras=["standard"]}  # ASGI server
orjson = "3.10.7"              # High-performance JSON
pydantic = "2.9.2"
pydantic-settings = "2.5.2"
structlog = "25.4.0"           # Structured logging (bumped)
# Enforce future additions remain strict; tasks T004
rich = "13.9.2"                # Dev-time pretty logs / CLI (runtime safe)
python-dotenv = "1.0.1"        # Env file loading
typing-extensions = "4.12.2"
# NOTE: numba 0.60.0 requires numpy <2.1; keep within deterministic band and align with version guard (adjust guard if changed).
numpy = "<2.1,>=2.0.0"            # Determinism window; update infra/version_pins.py & hashes tests if shifted
pandas = "2.2.3"            # Aligned with numpy 2.1.x; pandas-ta 0.4.67 requires >=2.2.0 but works with 2.2.3
pyarrow = "17.0.0"             # Parquet / Arrow
matplotlib = "3.9.2"  # Visualization (now core for deterministic plots FR-014/FR-041)
polars = { version = "1.9.0", optional = true }
scipy = { version = "1.14.1", optional = true }
statsmodels = "0.14.3"         # Statistical tests (validation)
numba = { version = "0.60.0", optional = true }
yfinance = { version = "0.2.44", optional = true }            # Data acquisition (optional)
requests = "2.32.3"
aiohttp = "3.10.8"             # Potential async fetch / future streaming
tenacity = "9.0.0"             # Retry logic
exchange-calendars = "4.5.5"   # Trading calendars
python-dateutil = "2.9.0.post0"
pytz = "2024.2"
SQLAlchemy = "2.0.35"
alembic = "1.13.3"
celery = { version = "5.4.0", optional = true }
redis = { version = "5.0.8", optional = true }
flower = { version = "2.0.1", optional = true }
sse-starlette = "2.1.0"        # SSE support for events
boto3 = { version = "1.35.36", optional = true }
google-cloud-storage = { version = "2.18.2", optional = true }
click = "8.1.7"                # CLI entrypoints
Pillow = { version = "10.4.0", optional = true }  # (indicators with image export; optional)
# pandas-ta requires Python >=3.12 in current releases; gate it so 3.11 users aren't broken.
# Users on 3.12+ can install via: poetry install --with indicators (see [tool.poetry.extras]).
"pandas-ta" = { version = "0.4.71b0", python = ">=3.12", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "8.3.2"
pytest-cov = "5.0.0"
pytest-asyncio = "0.24.0"      # Async endpoint / SSE tests
hypothesis = "6.112.2"         # Property-based tests (metrics/validation)
httpx = "0.27.2"               # Async test client for FastAPI
freezegun = "1.5.1"            # Time-freezing for determinism tests
ruff = "0.6.8"
mypy = "1.11.2"
types-requests = "2.32.0.20240914"  # Type stubs
types-python-dateutil = "2.9.0.20240906"
pre-commit = "3.8.0"
jsonschema = "4.23.0"

[tool.poetry.scripts]
api = "api.app:app"            # For uvicorn: poetry run uvicorn api.app:app --reload
run-server = "api.app:app"
run-hash = "services.cli.run_hash:main"
health-check = "scripts.post_install_health_check:main"
poetry-self-check = "scripts.poetry_self_check:main"
launch-alphaforge = "scripts.launch_alphaforge:main"

[tool.poetry.extras]
polars = ["polars"]
performance = ["numba"]
distributed = ["celery", "redis", "flower"]
storage = ["boto3", "google-cloud-storage"]
analytics = ["scipy", "statsmodels"]
visualization = ["matplotlib"]
data-sources = ["yfinance"]
indicators = ["pandas-ta"]

[tool.pytest.ini_options]
pythonpath = ["alphaforge-brain/src"]
addopts = "-q"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
	"E","F","I","B","UP","Q","RUF",  # Existing
	"SIM",  # Simplify
	"C4",   # Comprehensions
	"PIE",  # Misc best practices
	"TID",  # Type hinting style
	"FBT",  # Boolean trap
	"PL",   # Pylint-like (lightweight extra signals)
]
ignore = [
  "E501",      # Line length handled separately
  "PLR0913",   # Allow multi-arg dataclass/constructors in domain models
  "PLR2004",   # Magic value comparisons acceptable in tests
  "FBT001",    # Boolean arg naming less critical for internal test helpers
  "FBT002",    # Boolean arg naming less critical for internal test helpers
  "B008",      # FastAPI dependency injection pattern (Depends) is idiomatic
]
fixable = ["ALL"]
unfixable = []
preview = true

[tool.ruff.lint.per-file-ignores]
"alphaforge-brain/src/api/routes/*.py" = ["B008"]
"alphaforge-brain/tests/**/*.py" = ["PLR2004","FBT001","FBT002","F841"]
"alphaforge-brain/scripts/**/*.py" = ["E402"]
"scripts/**/*.py" = ["E402"]

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true
warn_return_any = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
